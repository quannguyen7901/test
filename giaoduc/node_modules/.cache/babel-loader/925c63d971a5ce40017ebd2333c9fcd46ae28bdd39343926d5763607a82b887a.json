{"ast":null,"code":"import { OnClickOutside } from '@vueuse/components';\nexport default {\n  name: \"MisaListbox\",\n  props: {\n    //Text label hiển thị của listbox\n    label: {\n      type: String,\n      default: \"\"\n    },\n    //Ẩn hiện dấu * bắt buộc nhập\n    hasspan: {\n      type: Boolean,\n      default: false\n    },\n    //Dữ liệu sổ ra của listbox\n    datas: {\n      type: [],\n      default: \"\"\n    },\n    //Dữ liệu của vmodel\n    modelValue: {\n      default: null\n    }\n  },\n  data() {\n    return {\n      data: this.datas,\n      hasdata: false,\n      values: \"\"\n    };\n  },\n  components: {\n    OnClickOutside\n  },\n  mounted() {\n    if (this.modelValues == \"\") {\n      this.selectItem(0);\n    } else {\n      for (let j = 0; j < this.data.length; j++) {\n        let table = this.$refs.mitem[j];\n        //Tìm phần tử trong bảng\n        if (table.innerText == this.modelValue) {\n          this.selectItem(j);\n        }\n      }\n    }\n  },\n  methods: {\n    update(a) {\n      this.$emit(\"update:modelValue\", a);\n    },\n    /**\r\n     * Chọn một phần tử trong bảng\r\n     * auther:NgQuan\r\n     * @param {Vị trí của phần tử trong bảng} i \r\n     * create:05/2023\r\n     */\n    selectItem(i) {\n      for (let j = 0; j < this.data.length; j++) {\n        let table = this.$refs.mitem[j];\n        //Tìm phần tử trong bảng\n        if (i == j) {\n          //Nếu phần tử đó chưa được chọn\n          if (!table.classList.contains(\"combobox__item--select\")) {\n            this.values = table.innerText;\n            //Chọn phần tử đó\n            table.classList.add(\"combobox__item--select\");\n          }\n        } else {\n          //Nếu không phải phần tử được chọn\n          if (table.classList.contains(\"combobox__item--select\")) {\n            //Bỏ chọn phần tử\n            table.classList.remove(\"combobox__item--select\");\n          }\n        }\n        this.update(this.values);\n        this.hasdata = false;\n      }\n    },\n    showData() {\n      if (this.hasdata == false) {\n        this.hasdata = true;\n      } else {\n        this.hasdata = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["OnClickOutside","name","props","label","type","String","default","hasspan","Boolean","datas","modelValue","data","hasdata","values","components","mounted","modelValues","selectItem","j","length","table","$refs","mitem","innerText","methods","update","a","$emit","i","classList","contains","add","remove","showData"],"sources":["D:\\Code\\Misa\\vue Web_3\\giaoduc\\src\\components\\MisaListbox.vue"],"sourcesContent":["<template>\r\n     <OnClickOutside @trigger=\"() => this.hasdata = false\">\r\n        <div class=\"combobox\" ref=\"combo\">\r\n            <label for=\"\">{{ label }}</label><span v-if=\"hasspan\">*</span>\r\n            <div class=\"combobox__field\" style=\"display: flex;\">\r\n                <input type=\"text\" placeholder=\"\" :value=\"values\" class=\"combobox__input\">\r\n                <button class=\"combobox__button\" @click=\"showData\"><i\r\n                    class=\"icon fa-light fa-chevron-down icon--16\"></i></button>\r\n                </div>\r\n                <div v-show=\"hasdata\" class=\"combobox__data\">\r\n                    <a @click=\"selectItem(index)\" ref=\"mitem\" v-for=\"(item, index) in datas\" :key=\"index\" value=\"item\"\r\n                    class=\"combobox__item\">{{ item }}</a>\r\n                </div>\r\n            </div>\r\n    </OnClickOutside>\r\n</template>\r\n  \r\n<script>\r\nimport { OnClickOutside } from '@vueuse/components'\r\nexport default {\r\n    name: \"MisaListbox\",\r\n    props: {\r\n        //Text label hiển thị của listbox\r\n        label: {\r\n            type: String,\r\n            default: \"\"\r\n        }, \r\n        //Ẩn hiện dấu * bắt buộc nhập\r\n        hasspan: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        //Dữ liệu sổ ra của listbox\r\n        datas: {\r\n            type: [],\r\n            default: \"\"\r\n        },\r\n        //Dữ liệu của vmodel\r\n        modelValue:{\r\n            default:null\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            data: this.datas,\r\n            hasdata: false,\r\n            values: \"\",\r\n        }\r\n    },\r\n    components:{OnClickOutside},\r\n    mounted() {\r\n        if(this.modelValues==\"\"){\r\n            this.selectItem(0)\r\n        }\r\n        else{\r\n            for (let j = 0; j < this.data.length; j++) {\r\n                let table = this.$refs.mitem[j]\r\n                //Tìm phần tử trong bảng\r\n                if(table.innerText==this.modelValue){\r\n                    this.selectItem(j)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        update(a) {\r\n            this.$emit(\"update:modelValue\", a)\r\n        },\r\n        /**\r\n         * Chọn một phần tử trong bảng\r\n         * auther:NgQuan\r\n         * @param {Vị trí của phần tử trong bảng} i \r\n         * create:05/2023\r\n         */\r\n        selectItem(i) {\r\n            for (let j = 0; j < this.data.length; j++) {\r\n                let table = this.$refs.mitem[j]\r\n                //Tìm phần tử trong bảng\r\n                if (i == j) {\r\n                    //Nếu phần tử đó chưa được chọn\r\n                    if (!table.classList.contains(\"combobox__item--select\")) {\r\n                        this.values = table.innerText\r\n                        //Chọn phần tử đó\r\n                        table.classList.add(\"combobox__item--select\")\r\n                    }\r\n                }\r\n                else {\r\n                    //Nếu không phải phần tử được chọn\r\n                    if (table.classList.contains(\"combobox__item--select\")) {\r\n                        //Bỏ chọn phần tử\r\n                        table.classList.remove(\"combobox__item--select\")\r\n                    }\r\n                }\r\n                this.update(this.values)\r\n                this.hasdata = false\r\n            }\r\n        },\r\n        showData() {\r\n            if (this.hasdata == false) {\r\n                this.hasdata = true\r\n            }\r\n            else {\r\n                this.hasdata = false\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>\r\n  \r\n<style></style>"],"mappings":"AAkBA,SAASA,cAAa,QAAS,oBAAmB;AAClD,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACH;IACAC,KAAK,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACb,CAAC;IACD;IACAC,OAAO,EAAE;MACLH,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACb,CAAC;IACD;IACAG,KAAK,EAAE;MACHL,IAAI,EAAE,EAAE;MACRE,OAAO,EAAE;IACb,CAAC;IACD;IACAI,UAAU,EAAC;MACPJ,OAAO,EAAC;IACZ;EACJ,CAAC;EACDK,IAAIA,CAAA,EAAG;IACH,OAAO;MACHA,IAAI,EAAE,IAAI,CAACF,KAAK;MAChBG,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,UAAU,EAAC;IAACd;EAAc,CAAC;EAC3Be,OAAOA,CAAA,EAAG;IACN,IAAG,IAAI,CAACC,WAAW,IAAE,EAAE,EAAC;MACpB,IAAI,CAACC,UAAU,CAAC,CAAC;IACrB,OACI;MACA,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACP,IAAI,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;QACvC,IAAIE,KAAI,GAAI,IAAI,CAACC,KAAK,CAACC,KAAK,CAACJ,CAAC;QAC9B;QACA,IAAGE,KAAK,CAACG,SAAS,IAAE,IAAI,CAACb,UAAU,EAAC;UAChC,IAAI,CAACO,UAAU,CAACC,CAAC;QACrB;MACJ;IACJ;EACJ,CAAC;EACDM,OAAO,EAAE;IACLC,MAAMA,CAACC,CAAC,EAAE;MACN,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,CAAC;IACrC,CAAC;IACD;;;;;;IAMAT,UAAUA,CAACW,CAAC,EAAE;MACV,KAAK,IAAIV,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAI,IAAI,CAACP,IAAI,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;QACvC,IAAIE,KAAI,GAAI,IAAI,CAACC,KAAK,CAACC,KAAK,CAACJ,CAAC;QAC9B;QACA,IAAIU,CAAA,IAAKV,CAAC,EAAE;UACR;UACA,IAAI,CAACE,KAAK,CAACS,SAAS,CAACC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;YACrD,IAAI,CAACjB,MAAK,GAAIO,KAAK,CAACG,SAAQ;YAC5B;YACAH,KAAK,CAACS,SAAS,CAACE,GAAG,CAAC,wBAAwB;UAChD;QACJ,OACK;UACD;UACA,IAAIX,KAAK,CAACS,SAAS,CAACC,QAAQ,CAAC,wBAAwB,CAAC,EAAE;YACpD;YACAV,KAAK,CAACS,SAAS,CAACG,MAAM,CAAC,wBAAwB;UACnD;QACJ;QACA,IAAI,CAACP,MAAM,CAAC,IAAI,CAACZ,MAAM;QACvB,IAAI,CAACD,OAAM,GAAI,KAAI;MACvB;IACJ,CAAC;IACDqB,QAAQA,CAAA,EAAG;MACP,IAAI,IAAI,CAACrB,OAAM,IAAK,KAAK,EAAE;QACvB,IAAI,CAACA,OAAM,GAAI,IAAG;MACtB,OACK;QACD,IAAI,CAACA,OAAM,GAAI,KAAI;MACvB;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}